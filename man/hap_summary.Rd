% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hapVisualization.R
\name{hap_summary}
\alias{hap_summary}
\title{Summary hap results}
\usage{
hap_summary(hap,
           hapPrefix = "H",
           file = file)
}
\arguments{
\item{hap}{object of hapResult class, generated by \code{vcf2hap()}
or \code{seqs2hap} or \code{import_hap()}}

\item{hapPrefix}{prefix of hap names, default as "H"}

\item{file}{file path where to save the hap summary result.
If missing, nothing will be saved to disk.}
}
\value{
hapSummary, first four rows are fixed to meta information: CHR, POS, INFO, ALLELE
Hap names were placed in first column, Accessions and freqs were placed at the last two columns.
}
\description{
A function used for summarize hapResult to visualization and calculation.
}
\details{
It is suggested to use the result of \code{vcf2hap()} or \code{seqs2hap()}
as input directly.
However the user can import previously hap result from local file
with \code{import_hap()}
}
\note{
If the user have changed the default \code{hapPrefix} in \code{vcf2hap()} or \code{seqs2hap()},
then the parameter \code{hapPrefix} is needed.
Furthermore, a multi-letter prefix of hap names is possible.
}
\examples{
\dontrun{

#### 1. generate hap result from vcf file ####
# imoprt vcf data
vcf <- import_vcf("myVcfFile.vcf.gz")

# calculate hap result with vcfR
hap <- vcf2hap(vcf, hyb_remove = TRUE, na.drop =TRUE)


#### 2. calculate hap from DNA seqs ####
# import DNA seqs from fasta file
seqs <- import_seqs("myseq.fa", format = "fasta")

# aline multi-seqs
aliedSeqs <- allignSeqs(seqs)

# trim alined seqs
trimedSeqs <- trimSeqs(seqs,
                       minFlankFraction = 0.1)

# calculate hap result with trimed seqs
hap <- seqs2hap(trimedSeqs,
                Ref = names(seqs)[1],
                hyb_remove = TRUE,
                maxGapsPerSeq = 0.25,
                hapPrefix = "H")



#### 3. summary and visualizatiion ####
# summary hap result for plot hap table
hapSummary <- hap_summary(hap)

# plot hap table
plotHapTable(hapSummary)

# user could change/add themes, title, ...
p <- plotHapTable(hapSummary)
p + ggplot2::theme_classic()
p + ggplot2::labs(title = "new title")
}
}
